apiVersion: batch/v1
kind: Job
metadata:
  name: qgis-job

spec:
  strategy:
    type: Recreate

  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/api/metrics'
    spec:
      containers:
        - name: qgis-job

          image: "ghcr.io/bcgov/qfieldcloudbc/docker-qgis:latest"
          imagePullPolicy: Always
          env:
            - name: QGIS_VERSION
              value: 3.30.1
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
            - name: LD_PRELOAD
              value: /lib/x86_64-linux-gnu/libSegFault.so
            - name: SEGFAULT_SIGNALS
              value: abrt segv
            - name: LIBC_FATAL_STDERR_
              value: "1"
            - name: LANG
              value: C.UTF-8
            - name: XDG_RUNTIME_DIR
              value: /root
            - name: PYTHONPATH
              value: /qfieldcloud-sdk-python:/libqfieldsync
            - name: DEBUG_BUILD
              value: "0"
          envFrom:
            - configMapRef:
                name: qgis-config
      restartPolicy: Never
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - qgis-job
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
