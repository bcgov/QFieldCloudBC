
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#-- global variables, can be accessed by sub-charts.
global:
  #-- the registry where the images are stored. override during runtime for other registry at global level or individual level.
  repository: ~ # provide the repo name from where images will be sourced for example bcgo
  #-- the registry where the images are stored. override during runtime for other registry at global level or individual level. default is ghcr.io
  registry: ghcr.io # ghcr.io for directly streaming from github container registry or "artifacts.developer.gov.bc.ca/github-docker-remote" for artifactory, or any other registry.
  #-- the tag of the image, it can be latest, 1.0.0 etc..., or the sha256 hash
  tag: ~
  #-- turn off autoscaling for the entire suite by setting this to false. default is true.
  autoscaling: false
  #-- global secrets, can be accessed by sub-charts.
  secrets:
    enabled: true
    databasePassword: ~
    databaseName: ~
    persist: true
  config:
    databaseUser: ~
  #-- domain of the application, it is required, apps.silver.devops.gov.bc.ca for silver cluster and apps.devops.gov.bc.ca for gold cluster
  domain: "apps.silver.devops.gov.bc.ca" # it is apps.gold.devops.gov.bc.ca for gold cluster
  #-- the database Alias gives a nice way to switch to different databases, crunchy, patroni ... etc.
  databaseAlias: bitnamipg #uncomment when using bitnami pg and comment below.
  #databaseAlias: postgres-crunchy #uncomment when using crunchy and comment above.
  security: 
    allowInsecureImages: true

app:
  enabled: False
  deploymentStrategy: Recreate
  autoscaling:
    #-- enable or disable autoscaling.
    enabled: false
    #-- the minimum number of replicas.
    minReplicas: 3
    #-- the maximum number of replicas.
    maxReplicas: 7
    #-- the target cpu utilization percentage, is from request cpu and NOT LIMIT CPU.
    targetCPUUtilizationPercentage: 80
  service:
    enabled: true
    type: ClusterIP
    port: 8000
    targetPort: 8000
  pdb:
    enabled: false # enable it in PRODUCTION for having pod disruption budget.
    minAvailable: 1 # the minimum number of pods that must be available during the disruption budget.
  image:
    registry: ghcr.io
    repository: 'bcgov/qfieldcloudbc/docker-app:latest'
    tag: latest
  env:
    DJANGO_ALLOWED_HOSTS: "example.com,localhost"
    DJANGO_SETTINGS_MODULE: "your_project.settings"
    SECRET_KEY: "change_this_to_a_very_secret_key"
    DEBUG: "False"
    ENVIRONMENT: "production"
    SENTRY_DSN: ""
    SENTRY_RELEASE: ""
    SENTRY_ENVIRONMENT: "production"
    SENTRY_SAMPLE_RATE: "1.0"
    POSTGRES_DB: "your_db_name"
    POSTGRES_DB_TEST: "test_your_db_name"
    POSTGRES_USER: "your_db_user"
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST: "your-postgres-service"
    POSTGRES_PORT: "5432"
    POSTGRES_SSLMODE: "require"
    STORAGE_ACCESS_KEY_ID: ""
    STORAGE_SECRET_ACCESS_KEY: ""
    STORAGE_BUCKET_NAME: ""
    STORAGE_REGION_NAME: ""
    STORAGE_ENDPOINT_URL: ""
    STORAGES: ""
    STORAGES_PROJECT_DEFAULT_STORAGE: ""
    QFIELDCLOUD_DEFAULT_NETWORK: "default-network"
    QFIELDCLOUD_PASSWORD_LOGIN_DISABLED: "False"
    GEODB_HOST: ""
    GEODB_PORT: ""
    GEODB_USER: ""
    GEODB_PASSWORD: ""
    GEODB_DB: ""
    ACCOUNT_EMAIL_VERIFICATION: "mandatory"
    EMAIL_HOST: ""
    EMAIL_USE_TLS: "True"
    EMAIL_USE_SSL: "False"
    EMAIL_PORT: "587"
    EMAIL_HOST_USER: ""
    EMAIL_HOST_PASSWORD: ""
    DEFAULT_FROM_EMAIL: ""  
  configMap:
    enabled: False
bitnamipg:
  enabled: False
  image:
    registry: ghcr.io
    repository: bcgov/nr-containers/bitnami/postgresql
    tag: 16.6.0
  auth:
    existingSecret: '{{ .Release.Name }}-database'
    username: 'postgres' # make sure this is aligned with secret.yaml
    database: qfielddb # make sure this is aligned with secret.yaml
  shmVolume:
    enabled: false
  backup:
    enabled: false
    cronjob:
      containerSecurityContext: { }
      podSecurityContext:
        enabled: false
      storage:
        size: 200Mi